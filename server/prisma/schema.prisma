generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  hacker
  mentor
  sponsor
}

model User {
  id                String      @id @default(cuid())
  email             String      @unique
  password          String
  role              Role        @default(hacker)
  firstName         String?
  lastName          String?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @default(now()) @updatedAt
  student           Boolean     @default(false)
  school            String?
  country           String?
  company           String?
  website           String?
  github            String?
  twitter           String?
  telegram          String?
  linkedin          String?
  experience        Experience?
  jobs              Boolean     @default(false)
  applicationStatus Boolean     @default(false)
  // wallet    String?
}

enum ExperienceLevel {
  new
  beginner
  intermediate
  advanced
  expert
}

model Experience {
  id          String           @id @default(cuid())
  userId      String           @unique
  description String
  level       ExperienceLevel?
  years       Int?
  tools       Tool[]
  languages   Language[]
  user        User             @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Tool {
  id           String     @id @default(cuid())
  experienceId String
  name         String
  experience   Experience @relation(fields: [experienceId], references: [id], onDelete: Cascade)

  @@index([experienceId])
}

model Language {
  id           String     @id @default(cuid())
  experienceId String
  name         String
  experience   Experience @relation(fields: [experienceId], references: [id], onDelete: Cascade)

  @@index([experienceId])
}
